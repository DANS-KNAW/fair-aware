services:
  postgres:
    image: postgres:17-alpine
    restart: always
    ports:
      - "${DATABASE_PORT}:5432"
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${DATABASE_USERNAME} -d ${DATABASE_NAME}'",
        ]
      interval: 10s
      timeout: 3s
      retries: 3

  dev_keycloak:
    container_name: "dev_keycloak"
    image: 'quay.io/keycloak/keycloak:21.0'
    hostname: keycloak
    environment:
      - KEYCLOAK_ADMIN=kcadmin
      - KEYCLOAK_ADMIN_PASSWORD=kcpassword
      - KEYCLOAK_LOGLEVEL=DEBUG
      - KC_HOSTNAME_STRICT=false
#    networks:
#      dataverse:
#        aliases:
#          - keycloak.mydomain.com #create a DNS alias within the network (add the same alias to your /etc/hosts to get a working OIDC flow)
    command: start-dev --import-realm --http-port=8090  # change port to 8090, so within the network and external the same port is used
#    command: start-dev --http-port=8090  # change port to 8090, so within the network and external the same port is used
    ports:
      - "8090:8090"
    volumes:
      - './conf/keycloak/test-realm.json:/opt/keycloak/data/import/test-realm.json'

  backend:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./api-fair-impact
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${API_PORT}:3001"
    env_file:
      - .env

  frontend:
    depends_on:
      - backend
    build:
      context: ./client-fair-impact
      dockerfile: Dockerfile
    restart: always
    ports:
      - "${CLIENT_PORT}:3000"
    env_file:
      - .env